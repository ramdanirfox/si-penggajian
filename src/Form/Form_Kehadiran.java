/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import com.github.lgooddatepicker.components.TimePickerSettings;
import com.github.lgooddatepicker.components.TimePickerSettings.TimeIncrement;
import com.github.lgooddatepicker.optionalusertools.DateTimeChangeListener;
import com.github.lgooddatepicker.zinternaltools.DateTimeChangeEvent;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksiDB.koneksi;
import penggajian_karyawan.Penggajian_Karyawan;

/**
 *
 * @author RFox
 */
public class Form_Kehadiran extends javax.swing.JFrame {
javax.swing.Timer pewaktu;
private DefaultTableModel model;
String vNm,vwktM,vtglM,vwktP,vtglP, vCariTgl;
String vCariKriteria = "";
private static Statement st;
private TimePickerSettings lgoodTimePickerSetting;
    /**
     * Creates new form Form_Kehadiran
     */
    public Form_Kehadiran() {
        initSetting();
        initComponents();
        model = new DefaultTableModel();
       tbl.setModel(model);
        bupdate.setEnabled(false);
        bdelete.setEnabled(false);
        model.addColumn("karyawanID");
        model.addColumn("jam_masuk");
        model.addColumn("jam_pulang");
        model.addColumn("nama");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = getSize();
        setLocation((screenSize.width - frameSize.width)/2,(screenSize.height-frameSize.height)/2);
        Seticon();
        isiKaryawan();
        initJam();
        initListener();
        getData();
        fidkaryawan.setEditable(false);
        fnamakaryawan.setEditable(false);
    }
   
 
    public String idKry;
    public String nmKry;
 
    public String getidKry() {
        return idKry;
    }
    
    private void isiKaryawan() {
    idKry = Penggajian_Karyawan.getUserId();
    nmKry = Penggajian_Karyawan.getDisplayName();
    fidkaryawan.setText(idKry);
    fnamakaryawan.setText(nmKry);
    }
    
    private void initJam() {
        DateTimeFormatter p = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        pewaktu = new javax.swing.Timer(1000, new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                pewaktu.stop();
                String tgl = LocalDateTime.now().format(p);
                lSekarang.setText(tgl);
            }
        });
        pewaktu.start();
    }
    
  public void itemTerpilih(){                              
        Data_Search1 DS = new Data_Search1();
        fidkaryawan.setText(idKry);
        fnamakaryawan.setText(nmKry);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jamMasuk = new javax.swing.JPanel();
        fidkaryawan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        bsave = new javax.swing.JButton();
        bupdate = new javax.swing.JButton();
        bdelete = new javax.swing.JButton();
        bexit = new javax.swing.JButton();
        breset = new javax.swing.JButton();
        jamMasuk2 = new com.github.lgooddatepicker.components.DateTimePicker(null, lgoodTimePickerSetting);
        jamPulang = new com.github.lgooddatepicker.components.DateTimePicker(null, lgoodTimePickerSetting);
        jLabel2 = new javax.swing.JLabel();
        bSekarangMasuk = new javax.swing.JButton();
        bSekarangPulang = new javax.swing.JButton();
        fnamakaryawan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        brekam = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lSekarang = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        cariTgl = new com.github.lgooddatepicker.components.DateTimePicker(null, lgoodTimePickerSetting);
        cariKriteria = new javax.swing.JComboBox<>();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jamMasuk.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("ID Karyawan");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Text preview.gif"))); // NOI18N
        jButton6.setText("Search Karyawan");
        jButton6.setPreferredSize(new java.awt.Dimension(0, 0));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel5.setText("Jam Masuk");

        bsave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Save.gif"))); // NOI18N
        bsave.setText("Save");
        bsave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bsave.setPreferredSize(new java.awt.Dimension(0, 0));
        bsave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bsaveMouseClicked(evt);
            }
        });
        bsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsaveActionPerformed(evt);
            }
        });

        bupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Modify.gif"))); // NOI18N
        bupdate.setText("Update");
        bupdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bupdate.setPreferredSize(new java.awt.Dimension(0, 0));
        bupdate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bupdateActionPerformed(evt);
            }
        });

        bdelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Delete.gif"))); // NOI18N
        bdelete.setText("Delete");
        bdelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bdelete.setPreferredSize(new java.awt.Dimension(0, 0));
        bdelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdeleteActionPerformed(evt);
            }
        });

        bexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Exit.gif"))); // NOI18N
        bexit.setText("Exit");
        bexit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bexit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bexitActionPerformed(evt);
            }
        });

        breset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Remove.gif"))); // NOI18N
        breset.setText("Reset");
        breset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        breset.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        breset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bresetActionPerformed(evt);
            }
        });

        jamMasuk2.setEnabled(false);

        jamPulang.setEnabled(false);
        jamPulang.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jamPulangMouseMoved(evt);
            }
        });
        jamPulang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jamPulangFocusLost(evt);
            }
        });

        jLabel2.setText("Jam Pulang");

        bSekarangMasuk.setText("Sekarang");
        bSekarangMasuk.setPreferredSize(new java.awt.Dimension(0, 0));
        bSekarangMasuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSekarangMasukActionPerformed(evt);
            }
        });

        bSekarangPulang.setText("Sekarang");
        bSekarangPulang.setOpaque(true);
        bSekarangPulang.setPreferredSize(new java.awt.Dimension(0, 0));
        bSekarangPulang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSekarangPulangActionPerformed(evt);
            }
        });

        jLabel4.setText("Nama Karyawan");

        brekam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Save.gif"))); // NOI18N
        brekam.setText("Rekam");
        brekam.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        brekam.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        brekam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                brekamMouseClicked(evt);
            }
        });
        brekam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brekamActionPerformed(evt);
            }
        });

        jLabel6.setText("Sekarang");

        lSekarang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Calendar.gif"))); // NOI18N
        lSekarang.setText("-");

        javax.swing.GroupLayout jamMasukLayout = new javax.swing.GroupLayout(jamMasuk);
        jamMasuk.setLayout(jamMasukLayout);
        jamMasukLayout.setHorizontalGroup(
            jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jamMasukLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jamMasukLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(17, 17, 17)
                        .addComponent(fnamakaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jamMasukLayout.createSequentialGroup()
                        .addComponent(bsave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(breset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bexit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brekam)
                        .addGap(33, 33, 33)
                        .addComponent(bupdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bdelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jamMasukLayout.createSequentialGroup()
                        .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addGap(42, 42, 42)
                        .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jamMasukLayout.createSequentialGroup()
                                .addComponent(jamMasuk2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bSekarangMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jamMasukLayout.createSequentialGroup()
                                .addComponent(jamPulang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bSekarangPulang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jamMasukLayout.createSequentialGroup()
                        .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(38, 38, 38)
                        .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lSekarang)
                            .addGroup(jamMasukLayout.createSequentialGroup()
                                .addComponent(fidkaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jamMasukLayout.setVerticalGroup(
            jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jamMasukLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lSekarang))
                .addGap(18, 18, 18)
                .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fidkaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnamakaryawan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(26, 26, 26)
                .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jamMasuk2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSekarangMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jamPulang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(bSekarangPulang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jamMasukLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bsave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bdelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(breset, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(bupdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bexit, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(brekam, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(14, 14, 14))
        );

        jLabel1.setText("Form Kehadiran");
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/gif/16x16/Text preview.gif"))); // NOI18N
        jButton7.setText("Cari");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        cariTgl.setEnabled(false);
        cariTgl.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                cariTglMouseMoved(evt);
            }
        });
        cariTgl.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cariTglFocusLost(evt);
            }
        });

        cariKriteria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua", "Sebelum", "Setelah" }));
        cariKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariKriteriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(cariKriteria, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cariTgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(cariTgl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cariKriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jamMasuk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(236, 236, 236))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jamMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Data_Search1 DS = new Data_Search1();
        DS.fK= this;
        DS.setVisible(true);
        DS.setResizable(false);    
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void bsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bsaveMouseClicked

    }//GEN-LAST:event_bsaveMouseClicked

    private void bsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsaveActionPerformed
                save();
    }//GEN-LAST:event_bsaveActionPerformed

    private void bexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bexitActionPerformed
        int konf = JOptionPane.showConfirmDialog(null, "Yakin Ingin menutup Form?","Konfirmasi",JOptionPane.YES_NO_OPTION);
        if(konf == JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_bexitActionPerformed

    private void bresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bresetActionPerformed
        // TODO add your handling code here:
        fnKosong();
    }//GEN-LAST:event_bresetActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        getData();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jamPulangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jamPulangFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jamPulangFocusLost

    private void jamPulangMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jamPulangMouseMoved
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jamPulangMouseMoved

    private void bSekarangMasukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSekarangMasukActionPerformed
        // TODO add your handling code here:
        this.jamMasuk2.setDateTimeStrict(LocalDateTime.now());
    }//GEN-LAST:event_bSekarangMasukActionPerformed

    private void bSekarangPulangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSekarangPulangActionPerformed
        // TODO add your handling code here:
        this.jamPulang.setDateTimeStrict(LocalDateTime.now());
    }//GEN-LAST:event_bSekarangPulangActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
         selectData();
        bsave.setEnabled(false);
        bupdate.setEnabled(true);
        bdelete.setEnabled(true);
    }//GEN-LAST:event_tblMouseClicked

    private void bdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdeleteActionPerformed
        delete();
        bsave.setEnabled(true);
        bupdate.setEnabled(false);
        bdelete.setEnabled(false);
    }//GEN-LAST:event_bdeleteActionPerformed

    private void bupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bupdateActionPerformed
        update();
        bsave.setEnabled(true);
        bupdate.setEnabled(false);
        bdelete.setEnabled(false);
    }//GEN-LAST:event_bupdateActionPerformed

    private void brekamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_brekamMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_brekamMouseClicked

    private void brekamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brekamActionPerformed
        // TODO add your handling code here:
        rekam();
    }//GEN-LAST:event_brekamActionPerformed

    private void cariTglMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cariTglMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_cariTglMouseMoved

    private void cariTglFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cariTglFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_cariTglFocusLost

    private void cariKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariKriteriaActionPerformed
        // TODO add your handling code here:
//        System.out.println((String)cariKriteria.getSelectedItem());
        String s = (String)cariKriteria.getSelectedItem();
        switch (s) {
            case "Setelah":
                vCariKriteria = ">=";
                cariTgl.setEnabled(true);
                break;
            case "Sebelum":
                vCariKriteria = "<=";
                cariTgl.setEnabled(true);
                break;
            default:
                vCariKriteria = "";
                cariTgl.setEnabled(false);
                break;
        }
    }//GEN-LAST:event_cariKriteriaActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        System.out.println("Cmp Removed");
        pewaktu.stop();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_Kehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_Kehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_Kehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_Kehadiran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_Kehadiran().setVisible(true);
            }
        });
    }
    
    private void initSetting() {
        lgoodTimePickerSetting = new TimePickerSettings();
        lgoodTimePickerSetting.use24HourClockFormat();
        lgoodTimePickerSetting.generatePotentialMenuTimes(TimeIncrement.FifteenMinutes, null, null);
    }
    
    private void initListener() {
    jamPulang.addDateTimeChangeListener(new DateTimeChangeListener() {
            public void dateOrTimeChanged(DateTimeChangeEvent event) {
                String wkt = jamPulang.getTimePicker().getText();
                String tgl = jamPulang.getDatePicker().getText();
                System.out.println("Tanggal terpilih pulang " + tgl + " " + wkt );
//                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
            }
        });
    
    jamMasuk2.addDateTimeChangeListener(new DateTimeChangeListener() {
            public void dateOrTimeChanged(DateTimeChangeEvent event) {
                String wkt = jamMasuk2.getTimePicker().getText();
                String tgl = jamMasuk2.getDatePicker().getText();
                System.out.println("Tanggal terpilih datang " + tgl + " " + wkt );
            }
        });
    }
    
  
    public void getData(){
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged(); 
        //String k = (String)ktg.getSelectedItem();
        DateTimeFormatter p = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.S");
        String filterTgl = "";
        String cariitem = "";
        if (cariTgl.getDateTimeStrict() != null && !vCariKriteria.equals("")) {
            String tgl = cariTgl.getDateTimeStrict().format(DateTimeFormatter.ISO_DATE_TIME).replace("T", " ");
            filterTgl = " AND jam_masuk" + vCariKriteria + " '" + tgl + "' ";
        }
        
        try {
            st = (Statement) koneksi.getKoneksi().createStatement();
            String sql = "SELECT b.karyawanID, jam_masuk, jam_pulang, b.nama  FROM kehadiran a LEFT JOIN karyawan b ON a.karyawanID = b.karyawanID where b.karyawanID = " + idKry + "" + filterTgl + " order by jam_masuk desc";
            System.out.println(sql);
            ResultSet res = st.executeQuery(sql);
            while(res.next()){
                Object[] obj = new Object[4];
                obj[0] = res.getString("karyawanID");
                obj[1] = res.getString("jam_masuk");
                obj[2] = res.getString("jam_pulang");
                obj[3] = res.getString("nama");
                model.addRow(obj);
            }
        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, err.getMessage());
        }
    }
     public void loadData(){
        vNm = fidkaryawan.getText();
         vwktM = jamMasuk2.getTimePicker().getText();
            vtglM = jamMasuk2.getDatePicker().getText();
                  vwktP = jamPulang.getTimePicker().getText();
                 vtglP = jamPulang.getDatePicker().getText();
    }
     
    private void rekam() {
        loadData();
        DateTimeFormatter p = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String sqlDateFmt = "%Y-%m-%d %H:%i:%s";
        String sqlWhere ="WHERE karyawanID = "+vNm+" AND date_format(jam_masuk, '%Y-%m-%d') = date_format(now(), '%Y-%m-%d')"; 
        String sqlCekMasuk = "SELECT date_format(jam_masuk, '"+sqlDateFmt+"') AS hasil FROM kehadiran k " + sqlWhere;
        String jamMasukHariIni = querySatu(sqlCekMasuk);
        System.out.println("SQLNyah " + sqlCekMasuk);
        if (jamMasukHariIni.equals("")) {
            System.out.println("Hari ini belum absen, mengisi");
            this.jamMasuk2.setDateTimeStrict(LocalDateTime.now());
            this.jamPulang.setDateTimeStrict(null);
            save();
            this.jamMasuk2.setDateTimeStrict(LocalDateTime.now());
            this.jamPulang.setDateTimeStrict(null);
        }
        else {
            this.jamMasuk2.setDateTimeStrict(LocalDateTime.parse((CharSequence)jamMasukHariIni, p));
            this.jamPulang.setDateTimeStrict(LocalDateTime.now());
            rekamUpdate();
            System.out.println("Sudah Masuk, memperbarui pulang");
            this.jamMasuk2.setDateTimeStrict(LocalDateTime.parse((CharSequence)jamMasukHariIni, p));
            this.jamPulang.setDateTimeStrict(LocalDateTime.now());
        }
    }
    
    private String querySatu(String query) {
       try {
            st = (Statement) koneksi.getKoneksi().createStatement();
            String sql = query;
            ResultSet res = st.executeQuery(sql);
            Object[] obj = new Object[1];
            while(res.next()){
                obj[0] = res.getString("hasil");
            }
            return obj[0] == null ? "" : (String)obj[0];
        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, err.getMessage());
            return "";
        }
    }
    
    private void save() {
        try{
        String sql = "INSERT INTO kehadiran (karyawanID,jam_masuk,jam_pulang)"
                +" VALUES (?, ?, ?)";
        PreparedStatement prepSql = koneksi.getKoneksi().prepareStatement(sql);
        prepSql.setString(1, fidkaryawan.getText());
        if (jamPulang.getDateTimeStrict() == null) {
            prepSql.setNull(2, java.sql.Types.NULL);
        }
        else {
            prepSql.setString(2, jamMasuk2.getDateTimeStrict().format(DateTimeFormatter.ISO_DATE_TIME).replace("T", " "));    
        }
        if (jamPulang.getDateTimeStrict() == null) {
            prepSql.setNull(3, java.sql.Types.NULL);
        } else {
            prepSql.setString(3,  jamPulang.getDateTimeStrict().format(DateTimeFormatter.ISO_DATE_TIME).replace("T", " "));
        }
        prepSql.executeUpdate();
        getData();
        fnKosong();
        fidkaryawan.requestFocus();
        
        JOptionPane.showMessageDialog(null, "Data Berhasil DiSimpan!");
        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Data Gagal DiSimpan!\n" + err.getMessage());
        }
    }
      private void fnKosong() {
//        fcari.setText("");
        cariTgl.setDateTimeStrict(null);
        jamPulang.setDateTimeStrict(null);
        jamMasuk2.setDateTimeStrict(null);
    };
      public void selectData(){
        int i = tbl.getSelectedRow();
        if(i == -1){
            JOptionPane.showMessageDialog(null, "Tidak ada data terpilih!");
            return;
        }
        fidkaryawan.setText(""+model.getValueAt(i, 0));
        DateTimeFormatter p = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss.S");
        LocalDateTime a = LocalDateTime.parse((CharSequence)model.getValueAt(i, 1), p);
        LocalDateTime b = LocalDateTime.parse((CharSequence)model.getValueAt(i, 2), p);
        this.jamMasuk2.setDateTimeStrict(a);
        this.jamPulang.setDateTimeStrict(b);

          
    }
      public void update(){
        loadData();
        try{
           st = (Statement)koneksi.getKoneksi().createStatement();
           String sql = "update kehadiran set karyawanID='"+vNm+"',"
                   + "jam_masuk='"+jamMasuk2+"',"
                   + "jam_pulang='"+jamPulang+"' where karyawanID='"+vNm+"'";
        PreparedStatement p = (PreparedStatement)koneksi.getKoneksi().prepareStatement(sql);
        p.executeUpdate();
        getData();
        fnKosong();
        fidkaryawan.requestFocus();
        JOptionPane.showMessageDialog(null, "Data Berhasil DiUpdate");
        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Data Gagal DiUpdate!");
            fnKosong();
        }
    }
      
       public void rekamUpdate(){
        loadData();
        try{
           st = (Statement)koneksi.getKoneksi().createStatement();
           String sql = "update kehadiran set karyawanID='"+vNm+"',"
                   + "jam_masuk='"+jamMasuk2+"',"
                   + "jam_pulang='"+jamPulang+"' where karyawanID='"+vNm+"' AND date_format(jam_masuk, '%Y-%m-%d') = date_format(now(), '%Y-%m-%d')";
        PreparedStatement p = (PreparedStatement)koneksi.getKoneksi().prepareStatement(sql);
        p.executeUpdate();
        getData();
        fnKosong();
        fidkaryawan.requestFocus();
        JOptionPane.showMessageDialog(null, "Data Berhasil DiUpdate");
        }catch(SQLException err){
            JOptionPane.showMessageDialog(null, "Data Gagal DiUpdate!");
            fnKosong();
        }
    }
          
      public void delete(){
        loadData();
        int psn = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menghapus data ini?","Konfirmasi",
                JOptionPane.OK_CANCEL_OPTION);
        if(psn == JOptionPane.OK_OPTION){
            try{
                st = (Statement) koneksi.getKoneksi().createStatement();
                String sql = "Delete From kehadiran Where karyawanID='"+vNm+"'";
                PreparedStatement p =(PreparedStatement) koneksi.getKoneksi().prepareStatement(sql);
                p.executeUpdate();
                getData();
                fnKosong();
                fidkaryawan.requestFocus();
                JOptionPane.showMessageDialog(null, "Data Berhasil DiHapus");
            }catch(SQLException err){
                JOptionPane.showMessageDialog(null, "Data Gagal DiHapus!");
                fnKosong();
            } 
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bSekarangMasuk;
    private javax.swing.JButton bSekarangPulang;
    private javax.swing.JButton bdelete;
    private javax.swing.JButton bexit;
    private javax.swing.JButton brekam;
    private javax.swing.JButton breset;
    private javax.swing.JButton bsave;
    private javax.swing.JButton bupdate;
    private javax.swing.JComboBox<String> cariKriteria;
    private com.github.lgooddatepicker.components.DateTimePicker cariTgl;
    private javax.swing.JTextField fidkaryawan;
    private javax.swing.JTextField fnamakaryawan;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel jamMasuk;
    private com.github.lgooddatepicker.components.DateTimePicker jamMasuk2;
    private com.github.lgooddatepicker.components.DateTimePicker jamPulang;
    private javax.swing.JLabel lSekarang;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
   private void Seticon() {
       setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Icon/gif/16x16/dktbig.gif")));
    }
}


